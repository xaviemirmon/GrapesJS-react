{"ast":null,"code":"var _jsxFileName = \"/Users/xavier/Projects/GrapesJS-react/src/index.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource theme-ui */\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport grapesjs from 'grapesjs';\nimport Basics from 'grapesjs-blocks-basic';\nimport BaseReactComponent from './base-react-component';\nimport ReactComponents from './react-components';\nimport MuiComponents from './mui-components';\nimport { ThemeProvider } from 'theme-ui';\nimport { funk } from '@theme-ui/presets';\nimport { jsxDEV as _jsxDEV } from \"theme-ui/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"theme-ui/jsx-dev-runtime\";\n\nconst Index = () => {\n  _s();\n\n  useEffect(() => {\n    const Editor = grapesjs.init({\n      container: '#gjs',\n      height: '100%',\n      storageManager: {\n        id: 'gjs-',\n        // Prefix identifier that will be used inside storing and loading\n        type: 'local',\n        // Type of the storage\n        autosave: true,\n        // Store data automatically\n        autoload: true,\n        // Autoload stored data on init\n        stepsBeforeSave: 1,\n        // If autosave enabled, indicates how many changes are necessary before store method is triggered\n        storeComponents: true,\n        // Enable/Disable storing of components in JSON format\n        storeStyles: true,\n        // Enable/Disable storing of rules in JSON format\n        storeHtml: true,\n        // Enable/Disable storing of components as HTML string\n        storeCss: true // Enable/Disable storing of rules as CSS string\n\n      },\n      panels: {\n        defaults: [{\n          id: 'commands'\n        }]\n      },\n      noticeOnUnload: false,\n      plugins: [Basics, BaseReactComponent, ReactComponents, MuiComponents]\n    });\n    Editor.setComponents(\"\\n    <div>\\n      <span>\\n        Foo\\n      </span>\\n      <Listing>\\n        <div>\\n          Bar\\n        </div>\\n        <MuiButton variant='contained' color='primary'>\\n          Click Me\\n        </MuiButton>\\n        <Slider />\\n      </Listing>\\n      <Snackbar>\\n        <MuiButton variant='contained' color='secondary'>\\n          Click Me\\n        </MuiButton>\\n      </Snackbar>\\n      <Slider />\\n    </div>\\n    \");\n  });\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(\"header\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      id: \"gjs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), _jsxDEV(\"footer\", {\n      children: \"Footer test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Index, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Index;\nReactDOM.render(_jsxDEV(React.StrictMode, {\n  children: _jsxDEV(ThemeProvider, {\n    theme: funk,\n    children: _jsxDEV(Index, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 79,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/xavier/Projects/GrapesJS-react/src/index.js"],"names":["React","useEffect","ReactDOM","grapesjs","Basics","BaseReactComponent","ReactComponents","MuiComponents","ThemeProvider","funk","Index","Editor","init","container","height","storageManager","id","type","autosave","autoload","stepsBeforeSave","storeComponents","storeStyles","storeHtml","storeCss","panels","defaults","noticeOnUnload","plugins","setComponents","render","document","getElementById"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;;;;AAKA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClBT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,MAAM,GAAGR,QAAQ,CAACS,IAAT,CAAc;AAC3BC,MAAAA,SAAS,EAAE,MADgB;AAE3BC,MAAAA,MAAM,EAAE,MAFmB;AAG3BC,MAAAA,cAAc,EAAE;AACdC,QAAAA,EAAE,EAAE,MADU;AACU;AACxBC,QAAAA,IAAI,EAAE,OAFQ;AAEU;AACxBC,QAAAA,QAAQ,EAAE,IAHI;AAGU;AACxBC,QAAAA,QAAQ,EAAE,IAJI;AAIU;AACxBC,QAAAA,eAAe,EAAE,CALH;AAKU;AACxBC,QAAAA,eAAe,EAAE,IANH;AAMU;AACxBC,QAAAA,WAAW,EAAE,IAPC;AAOU;AACxBC,QAAAA,SAAS,EAAE,IARG;AAQU;AACxBC,QAAAA,QAAQ,EAAE,IATI,CASU;;AATV,OAHW;AAc3BC,MAAAA,MAAM,EAAE;AAACC,QAAAA,QAAQ,EAAE,CAAC;AAClBV,UAAAA,EAAE,EAAE;AADc,SAAD;AAAX,OAdmB;AAiB3BW,MAAAA,cAAc,EAAE,KAjBW;AAkB3BC,MAAAA,OAAO,EAAE,CAACxB,MAAD,EAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,aAA9C;AAlBkB,KAAd,CAAf;AAqBAI,IAAAA,MAAM,CAACkB,aAAP;AAsBD,GA5CQ,CAAT;AA6CA,SACE;AAAA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAWD,CAzDD;;GAAMnB,K;;KAAAA,K;AA2DNR,QAAQ,CAAC4B,MAAT,CACE,QAAC,KAAD,CAAO,UAAP;AAAA,YACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAErB,IAAtB;AAAA,cACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEsB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF","sourcesContent":["/** @jsxImportSource theme-ui */\n\nimport React, { useEffect } from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport grapesjs from 'grapesjs';\nimport Basics from 'grapesjs-blocks-basic';\n\nimport BaseReactComponent from './base-react-component';\nimport ReactComponents from './react-components';\nimport MuiComponents from './mui-components';\n\nimport { ThemeProvider } from 'theme-ui'\nimport { funk } from '@theme-ui/presets'\n\n\n\n\nconst Index = () => {\n  useEffect(() => {\n    const Editor = grapesjs.init({\n      container: '#gjs',\n      height: '100%',\n      storageManager: {\n        id: 'gjs-',             // Prefix identifier that will be used inside storing and loading\n        type: 'local',          // Type of the storage\n        autosave: true,         // Store data automatically\n        autoload: true,         // Autoload stored data on init\n        stepsBeforeSave: 1,     // If autosave enabled, indicates how many changes are necessary before store method is triggered\n        storeComponents: true,  // Enable/Disable storing of components in JSON format\n        storeStyles: true,      // Enable/Disable storing of rules in JSON format\n        storeHtml: true,        // Enable/Disable storing of components as HTML string\n        storeCss: true,         // Enable/Disable storing of rules as CSS string\n      },\n      panels: {defaults: [{\n        id: 'commands',\n      }]},\n      noticeOnUnload: false,\n      plugins: [Basics, BaseReactComponent, ReactComponents, MuiComponents]\n    });\n    \n    Editor.setComponents(`\n    <div>\n      <span>\n        Foo\n      </span>\n      <Listing>\n        <div>\n          Bar\n        </div>\n        <MuiButton variant='contained' color='primary'>\n          Click Me\n        </MuiButton>\n        <Slider />\n      </Listing>\n      <Snackbar>\n        <MuiButton variant='contained' color='secondary'>\n          Click Me\n        </MuiButton>\n      </Snackbar>\n      <Slider />\n    </div>\n    `);\n  });\n  return (\n    <>\n      <header>\n        test\n      </header>\n      <div id='gjs' />\n      <footer>\n        Footer test\n      </footer>\n    </>\n  )\n} \n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={funk}>\n      <Index />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)"]},"metadata":{},"sourceType":"module"}