{"ast":null,"code":"import grapesjs from 'grapesjs';\nimport Basics from 'grapesjs-blocks-basic';\nimport BaseReactComponent from './base-react-component';\nimport ReactComponents from './react-components';\nimport MuiComponents from './mui-components';\nconst editor = grapesjs.init({\n  container: '#gjs',\n  height: '100%',\n  storageManager: {\n    id: 'gjs-',\n    // Prefix identifier that will be used inside storing and loading\n    type: 'local',\n    // Type of the storage\n    autosave: true,\n    // Store data automatically\n    autoload: true,\n    // Autoload stored data on init\n    stepsBeforeSave: 1,\n    // If autosave enabled, indicates how many changes are necessary before store method is triggered\n    storeComponents: true,\n    // Enable/Disable storing of components in JSON format\n    storeStyles: true,\n    // Enable/Disable storing of rules in JSON format\n    storeHtml: true,\n    // Enable/Disable storing of components as HTML string\n    storeCss: true // Enable/Disable storing of rules as CSS string\n\n  },\n  panels: {\n    defaults: []\n  },\n  blockManager: {\n    appendTo: '#blocks',\n    blocks: [{\n      id: 'section',\n      // id is mandatory\n      label: '<b>Section</b>',\n      // You can use HTML/SVG inside labels\n      attributes: {\n        class: 'gjs-block-section'\n      },\n      content: \"<section>\\n          <h1>This is a simple title</h1>\\n          <div>This is just a Lorem text: Lorem ipsum dolor sit amet</div>\\n        </section>\"\n    }, {\n      id: 'text',\n      label: 'Text',\n      content: '<div data-gjs-type=\"text\">Insert your text here</div>'\n    }, {\n      id: 'image',\n      label: 'Image',\n      // Select the component once it's dropped\n      select: true,\n      // You can pass components as a JSON instead of a simple HTML string,\n      // in this case we also use a defined component type `image`\n      content: {\n        type: 'image'\n      },\n      // This triggers `active` event on dropped components and the `image`\n      // reacts by opening the AssetManager\n      activate: true\n    }]\n  },\n  noticeOnUnload: false,\n  plugins: [Basics, BaseReactComponent, ReactComponents, MuiComponents]\n});\neditor.setComponents(\"\\n<div>\\n  <span>\\n    Foo\\n  </span>\\n  <Listing>\\n    <div>\\n      Bar\\n    </div>\\n    <MuiButton variant='contained' color='primary'>\\n      Click Me\\n    </MuiButton>\\n    <Slider />\\n  </Listing>\\n  <Snackbar>\\n    <MuiButton variant='contained' color='secondary'>\\n      Click Me\\n    </MuiButton>\\n  </Snackbar>\\n  <Slider />\\n</div>\\n\");","map":{"version":3,"sources":["/Users/xavier/Projects/GrapesJS-react/src/index.js"],"names":["grapesjs","Basics","BaseReactComponent","ReactComponents","MuiComponents","editor","init","container","height","storageManager","id","type","autosave","autoload","stepsBeforeSave","storeComponents","storeStyles","storeHtml","storeCss","panels","defaults","blockManager","appendTo","blocks","label","attributes","class","content","select","activate","noticeOnUnload","plugins","setComponents"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,OAAOC,kBAAP,MAA+B,wBAA/B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,MAAM,GAAGL,QAAQ,CAACM,IAAT,CAAc;AAC3BC,EAAAA,SAAS,EAAE,MADgB;AAE3BC,EAAAA,MAAM,EAAE,MAFmB;AAG3BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,EAAE,EAAE,MADU;AACU;AACxBC,IAAAA,IAAI,EAAE,OAFQ;AAEU;AACxBC,IAAAA,QAAQ,EAAE,IAHI;AAGU;AACxBC,IAAAA,QAAQ,EAAE,IAJI;AAIU;AACxBC,IAAAA,eAAe,EAAE,CALH;AAKU;AACxBC,IAAAA,eAAe,EAAE,IANH;AAMU;AACxBC,IAAAA,WAAW,EAAE,IAPC;AAOU;AACxBC,IAAAA,SAAS,EAAE,IARG;AAQU;AACxBC,IAAAA,QAAQ,EAAE,IATI,CASU;;AATV,GAHW;AAc3BC,EAAAA,MAAM,EAAE;AAACC,IAAAA,QAAQ,EAAE;AAAX,GAdmB;AAe3BC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,SADE;AAEZC,IAAAA,MAAM,EAAE,CACN;AACEb,MAAAA,EAAE,EAAE,SADN;AACiB;AACfc,MAAAA,KAAK,EAAE,gBAFT;AAE2B;AACzBC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAC;AAAR,OAHd;AAIEC,MAAAA,OAAO;AAJT,KADM,EASH;AACDjB,MAAAA,EAAE,EAAE,MADH;AAEDc,MAAAA,KAAK,EAAE,MAFN;AAGDG,MAAAA,OAAO,EAAE;AAHR,KATG,EAaH;AACDjB,MAAAA,EAAE,EAAE,OADH;AAEDc,MAAAA,KAAK,EAAE,OAFN;AAGD;AACAI,MAAAA,MAAM,EAAE,IAJP;AAKD;AACA;AACAD,MAAAA,OAAO,EAAE;AAAEhB,QAAAA,IAAI,EAAE;AAAR,OAPR;AAQD;AACA;AACAkB,MAAAA,QAAQ,EAAE;AAVT,KAbG;AAFI,GAfa;AA4C3BC,EAAAA,cAAc,EAAE,KA5CW;AA6C3BC,EAAAA,OAAO,EAAE,CAAC9B,MAAD,EAASC,kBAAT,EAA6BC,eAA7B,EAA8CC,aAA9C;AA7CkB,CAAd,CAAf;AAgDAC,MAAM,CAAC2B,aAAP","sourcesContent":["import grapesjs from 'grapesjs';\nimport Basics from 'grapesjs-blocks-basic';\n\nimport BaseReactComponent from './base-react-component';\nimport ReactComponents from './react-components';\nimport MuiComponents from './mui-components';\n\nconst editor = grapesjs.init({\n  container: '#gjs',\n  height: '100%',\n  storageManager: {\n    id: 'gjs-',             // Prefix identifier that will be used inside storing and loading\n    type: 'local',          // Type of the storage\n    autosave: true,         // Store data automatically\n    autoload: true,         // Autoload stored data on init\n    stepsBeforeSave: 1,     // If autosave enabled, indicates how many changes are necessary before store method is triggered\n    storeComponents: true,  // Enable/Disable storing of components in JSON format\n    storeStyles: true,      // Enable/Disable storing of rules in JSON format\n    storeHtml: true,        // Enable/Disable storing of components as HTML string\n    storeCss: true,         // Enable/Disable storing of rules as CSS string\n  },\n  panels: {defaults: []},\n  blockManager: {\n    appendTo: '#blocks',\n    blocks: [\n      {\n        id: 'section', // id is mandatory\n        label: '<b>Section</b>', // You can use HTML/SVG inside labels\n        attributes: { class:'gjs-block-section' },\n        content: `<section>\n          <h1>This is a simple title</h1>\n          <div>This is just a Lorem text: Lorem ipsum dolor sit amet</div>\n        </section>`,\n      }, {\n        id: 'text',\n        label: 'Text',\n        content: '<div data-gjs-type=\"text\">Insert your text here</div>',\n      }, {\n        id: 'image',\n        label: 'Image',\n        // Select the component once it's dropped\n        select: true,\n        // You can pass components as a JSON instead of a simple HTML string,\n        // in this case we also use a defined component type `image`\n        content: { type: 'image' },\n        // This triggers `active` event on dropped components and the `image`\n        // reacts by opening the AssetManager\n        activate: true,\n      }\n    ]\n  },\n  noticeOnUnload: false,\n  plugins: [Basics, BaseReactComponent, ReactComponents, MuiComponents]\n});\n\neditor.setComponents(`\n<div>\n  <span>\n    Foo\n  </span>\n  <Listing>\n    <div>\n      Bar\n    </div>\n    <MuiButton variant='contained' color='primary'>\n      Click Me\n    </MuiButton>\n    <Slider />\n  </Listing>\n  <Snackbar>\n    <MuiButton variant='contained' color='secondary'>\n      Click Me\n    </MuiButton>\n  </Snackbar>\n  <Slider />\n</div>\n`);\n"]},"metadata":{},"sourceType":"module"}