{"ast":null,"code":"import React, { useState, useEffect, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { useThemeUI, jsx, __ThemeUIInternalBaseThemeProvider } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport { Global } from '@emotion/react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar toVarName = function toVarName(key) {\n  return \"--theme-ui-\" + key.replace('-__default', '');\n};\n\nvar toVarValue = function toVarValue(key) {\n  return \"var(\" + toVarName(key) + \")\";\n};\n\nvar join = function join() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.filter(Boolean).join('-');\n};\n\nvar reservedKeys = new Set(['useCustomProperties', 'initialColorModeName', 'printColorModeName', 'initialColorMode', 'useLocalStorage', 'config']); // convert theme values to custom properties\n\nvar toCustomProperties = function toCustomProperties(obj, parent) {\n  var next = Array.isArray(obj) ? [] : {};\n\n  for (var key in obj) {\n    var value = obj[key];\n    var name = join(parent, key);\n\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name);\n      continue;\n    }\n\n    if (reservedKeys.has(key)) {\n      next[key] = value;\n      continue;\n    }\n\n    next[key] = toVarValue(name);\n  }\n\n  return next;\n};\n/**\n * @internal\n * Recursively transforms an object into CSS variables excluding \"modes\" key.\n */\n\n\nvar __objectToVars = function __objectToVars(parent, obj) {\n  var vars = {};\n\n  for (var key in obj) {\n    if (key === 'modes') continue;\n    var name = join(parent, key);\n    var value = obj[key];\n\n    if (value && typeof value === 'object') {\n      vars = _extends({}, vars, __objectToVars(name, value));\n    } else {\n      vars[toVarName(name)] = value;\n    }\n  }\n\n  return vars;\n};\n/**\n * @internal\n * Creates root styles for color modes.\n * - Transforms color scale into CSS variables.\n * - Sets background and text color.\n */\n\n\nvar __createColorStyles = function __createColorStyles(theme) {\n  if (theme === void 0) {\n    theme = {};\n  }\n\n  var _ref = theme.config || theme || {},\n      useCustomProperties = _ref.useCustomProperties,\n      initialColorModeName = _ref.initialColorModeName,\n      printColorModeName = _ref.printColorModeName,\n      useRootStyles = _ref.useRootStyles;\n\n  var colors = theme.rawColors || theme.colors;\n  if (!colors || useRootStyles === false) return {};\n\n  if (useCustomProperties === false) {\n    return css({\n      color: 'text',\n      bg: 'background'\n    })(theme);\n  }\n\n  var modes = colors.modes || {};\n\n  var styles = __createColorProperties(colors, modes);\n\n  if (printColorModeName) {\n    var mode = printColorModeName === 'initial' || printColorModeName === initialColorModeName ? colors : modes[printColorModeName];\n    styles['@media print'] = __objectToVars('colors', mode);\n  }\n\n  var colorToVarValue = function colorToVarValue(color) {\n    return toVarValue(\"colors-\" + color);\n  };\n\n  return css(_extends({}, styles, {\n    color: colorToVarValue('text'),\n    bg: colorToVarValue('background')\n  }))(theme);\n};\n/**\n * @internal\n * Returns an object with colors turned into Custom CSS Properties and\n * .theme-ui-<colormode> classes used for no-flash serverside rendering.\n */\n\n\nfunction __createColorProperties(colors, modes) {\n  var styles = __objectToVars('colors', colors);\n\n  Object.keys(modes).forEach(function (mode) {\n    var className = \".theme-ui-\" + mode;\n    var key = \"&\" + className + \", \" + className + \" &\";\n    styles[key] = __objectToVars('colors', modes[mode]);\n  });\n  return styles;\n}\n\nvar STORAGE_KEY = 'theme-ui-color-mode';\nvar DARK_QUERY = '(prefers-color-scheme: dark)';\nvar LIGHT_QUERY = '(prefers-color-scheme: light)';\nvar storage = {\n  get: function get() {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  },\n  set: function set(value) {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  }\n};\n\nvar getPreferredColorScheme = function getPreferredColorScheme() {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia(DARK_QUERY).matches) {\n      return 'dark';\n    }\n\n    if (window.matchMedia(LIGHT_QUERY).matches) {\n      return 'light';\n    }\n  }\n\n  return null;\n};\n\nvar useClientsideEffect = typeof window === 'undefined' ? function () {} : useLayoutEffect;\n\nvar TopLevelColorModeProvider = function TopLevelColorModeProvider(_ref) {\n  var outerCtx = _ref.outerCtx,\n      children = _ref.children;\n  var outerTheme = outerCtx.theme || {};\n\n  var _ref2 = outerTheme.config || outerTheme,\n      initialColorModeName = _ref2.initialColorModeName,\n      useColorSchemeMediaQuery = _ref2.useColorSchemeMediaQuery,\n      useLocalStorage = _ref2.useLocalStorage;\n\n  var _useState = useState(function () {\n    var preferredMode = useColorSchemeMediaQuery !== false && getPreferredColorScheme();\n    return preferredMode || initialColorModeName;\n  }),\n      colorMode = _useState[0],\n      setColorMode = _useState[1]; // on first render, we read the color mode from localStorage and\n  // clear the class on document element body\n\n\n  useClientsideEffect(function () {\n    var stored = useLocalStorage !== false && storage.get();\n\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.remove('theme-ui-' + stored);\n    }\n\n    if (useColorSchemeMediaQuery !== 'system' && stored && stored !== colorMode) {\n      colorMode = stored;\n      setColorMode(stored);\n    }\n  }, []); // when mode changes, we save it to localStorage\n\n  useEffect(function () {\n    if (colorMode && useLocalStorage !== false) {\n      storage.set(colorMode);\n    }\n  }, [colorMode, useLocalStorage]);\n  var setPreferredColorScheme = useCallback(function () {\n    var preferredColorScheme = getPreferredColorScheme();\n    setColorMode(preferredColorScheme || initialColorModeName);\n  }, [initialColorModeName]);\n  useEffect(function () {\n    if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n      // It doesn't matter if we add the listener only to the dark media query\n      // Because in our callback function we'll check for both media queries (light and dark).\n      var darkMQL = window.matchMedia(DARK_QUERY);\n\n      if (typeof darkMQL.addEventListener === 'function') {\n        darkMQL.addEventListener('change', setPreferredColorScheme);\n      } else if (typeof darkMQL.addListener === 'function') {\n        darkMQL.addListener(setPreferredColorScheme);\n      }\n    }\n\n    return function () {\n      if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n        var _darkMQL = window.matchMedia(DARK_QUERY);\n\n        if (typeof _darkMQL.removeEventListener === 'function') {\n          _darkMQL.removeEventListener('change', setPreferredColorScheme);\n        } else if (typeof _darkMQL.removeListener === 'function') {\n          _darkMQL.removeListener(setPreferredColorScheme);\n        }\n      }\n    };\n  }, [useColorSchemeMediaQuery, setPreferredColorScheme]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _outerTheme$colors;\n\n    if ((_outerTheme$colors = outerTheme.colors) != null && _outerTheme$colors.modes && initialColorModeName && Object.keys(outerTheme.colors.modes).indexOf(initialColorModeName) > -1) {\n      console.warn('[theme-ui] The `initialColorModeName` value should be a unique name' + ' and cannot reference a key in `theme.colors.modes`.');\n    }\n  }\n\n  var newTheme = useThemeWithAppliedColorMode({\n    colorMode: colorMode,\n    outerTheme: outerTheme\n  });\n\n  var newCtx = _extends({}, outerCtx, {\n    theme: newTheme,\n    colorMode: colorMode,\n    setColorMode: setColorMode\n  });\n\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: newCtx\n  }, /*#__PURE__*/React.createElement(GlobalColorStyles, {\n    theme: newTheme\n  }), children);\n};\n\nfunction useColorMode() {\n  var _useThemeUI = useThemeUI(),\n      colorMode = _useThemeUI.colorMode,\n      setColorMode = _useThemeUI.setColorMode;\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(\"[useColorMode] requires the ColorModeProvider component\");\n  } // We're allowing the user to specify a narrower type for its color mode name.\n\n\n  return [colorMode, setColorMode];\n}\n\nvar omitModes = function omitModes(colors) {\n  var res = _extends({}, colors);\n\n  delete res.modes;\n  return res;\n};\n\nfunction copyRawColors(colors, outerThemeRawColors) {\n  for (var _i = 0, _Object$entries = Object.entries(colors); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (typeof value === 'string' && !value.startsWith('var(')) {\n      outerThemeRawColors[key] = value;\n    } else if (typeof value === 'object') {\n      var newValue = _extends({}, outerThemeRawColors[key]);\n\n      copyRawColors(value, newValue);\n      outerThemeRawColors[key] = newValue;\n    }\n  }\n}\n\nfunction useThemeWithAppliedColorMode(_ref3) {\n  var outerTheme = _ref3.outerTheme,\n      colorMode = _ref3.colorMode;\n  var theme = useMemo(function () {\n    var res = _extends({}, outerTheme);\n\n    var modes = get(res, 'colors.modes', {});\n    var currentColorMode = get(modes, colorMode, {});\n\n    if (colorMode) {\n      res.colors = _extends({}, res.colors, currentColorMode);\n    }\n\n    var _ref4 = outerTheme.config || outerTheme,\n        useCustomProperties = _ref4.useCustomProperties,\n        _ref4$initialColorMod = _ref4.initialColorModeName,\n        initialColorModeName = _ref4$initialColorMod === void 0 ? '__default' : _ref4$initialColorMod;\n\n    var outerThemeRawColors = outerTheme.rawColors || outerTheme.colors || {};\n\n    if (useCustomProperties !== false) {\n      var alreadyHasRawColors = res.rawColors != null;\n      var colors = res.colors || {};\n\n      if (alreadyHasRawColors) {\n        outerThemeRawColors = _extends({}, outerThemeRawColors);\n        copyRawColors(colors, outerThemeRawColors);\n\n        if (outerThemeRawColors.modes) {\n          outerThemeRawColors.modes[initialColorModeName] = omitModes(outerThemeRawColors);\n        }\n\n        res.rawColors = outerThemeRawColors;\n      } else {\n        if (!('modes' in outerThemeRawColors)) {\n          res.rawColors = colors;\n        } else {\n          var _extends2;\n\n          var _modes = _extends((_extends2 = {}, _extends2[initialColorModeName] = omitModes(outerThemeRawColors), _extends2), outerThemeRawColors.modes);\n\n          res.rawColors = _extends({}, colors, {\n            modes: _modes\n          });\n          /* modes doesn't match index signature by design */\n        }\n      }\n\n      res.colors = toCustomProperties(omitModes(outerThemeRawColors), 'colors');\n    }\n\n    return res;\n  }, [colorMode, outerTheme]);\n  return theme;\n}\n\nfunction GlobalColorStyles(_ref5) {\n  var theme = _ref5.theme;\n  return jsx(Global, {\n    styles: function styles() {\n      return {\n        html: __createColorStyles(theme)\n      };\n    }\n  });\n}\n\nfunction NestedColorModeProvider(_ref6) {\n  var _newTheme$config2;\n\n  var outerCtx = _ref6.outerCtx,\n      children = _ref6.children;\n  var newTheme = useThemeWithAppliedColorMode({\n    outerTheme: outerCtx.theme,\n    colorMode: outerCtx.colorMode\n  }); // Nested theme providers need to be rerendered after hydration for the correct\n  // color mode to apply.\n\n  var _useState2 = useState( // Note: we could also check some \"ssr-enabled\" flag as an optimization for\n  // SPAs, as deeply nested theme providers will also pay a performance penalty\n  // for this SSR bug fix\n  function () {\n    var _newTheme$config;\n\n    return ((_newTheme$config = newTheme.config) == null ? void 0 : _newTheme$config.useLocalStorage) !== false;\n  }),\n      needsRerender = _useState2[0],\n      setNeedsRerender = _useState2[1];\n\n  useClientsideEffect(function () {\n    return void setNeedsRerender(false);\n  }, []);\n  var themeColors = newTheme.rawColors || newTheme.colors;\n  var useCustomProperties = (_newTheme$config2 = newTheme.config) == null ? void 0 : _newTheme$config2.useCustomProperties;\n  var colorVars = useMemo(function () {\n    if (useCustomProperties === false) {\n      return {};\n    }\n\n    var colors = themeColors || {};\n    return css(__createColorProperties(colors, colors.modes || {}))(newTheme);\n  }, [newTheme, themeColors, useCustomProperties]);\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: _extends({}, outerCtx, {\n      theme: newTheme\n    })\n  }, jsx('div', {\n    'data-themeui-nested-provider': true,\n    // the key here ensures that children will be rerendered after color\n    // mode is read from localStorage\n    key: Number(needsRerender),\n    suppressHydrationWarning: true,\n    css: colorVars,\n    children: children\n  }));\n}\n\nvar ColorModeProvider = function ColorModeProvider(_ref7) {\n  var children = _ref7.children;\n  var outerCtx = useThemeUI();\n  var isTopLevelColorModeProvider = typeof outerCtx.setColorMode !== 'function';\n  return isTopLevelColorModeProvider ? /*#__PURE__*/React.createElement(TopLevelColorModeProvider, {\n    outerCtx: outerCtx\n  }, children) : /*#__PURE__*/React.createElement(NestedColorModeProvider, {\n    outerCtx: outerCtx\n  }, children);\n};\n\nvar noflash = \"(function() { try {\\n  var mode = localStorage.getItem('theme-ui-color-mode');\\n  if (!mode) return\\n  document.documentElement.classList.add('theme-ui-' + mode);\\n} catch (e) {} })();\";\n\nvar InitializeColorMode = function InitializeColorMode() {\n  return jsx('script', {\n    key: 'theme-ui-no-flash',\n    dangerouslySetInnerHTML: {\n      __html: noflash\n    }\n  });\n};\n\nexport { ColorModeProvider, InitializeColorMode, useColorMode };","map":{"version":3,"sources":["/Users/xavier/Projects/GrapesJS-react/node_modules/@theme-ui/color-modes/dist/theme-ui-color-modes.esm.js"],"names":["React","useState","useEffect","useCallback","useMemo","useLayoutEffect","useThemeUI","jsx","__ThemeUIInternalBaseThemeProvider","css","get","Global","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","toVarName","replace","toVarValue","join","_len","args","Array","_key","filter","Boolean","reservedKeys","Set","toCustomProperties","obj","parent","next","isArray","value","name","has","__objectToVars","vars","__createColorStyles","theme","_ref","config","useCustomProperties","initialColorModeName","printColorModeName","useRootStyles","colors","rawColors","color","bg","modes","styles","__createColorProperties","mode","colorToVarValue","keys","forEach","className","STORAGE_KEY","DARK_QUERY","LIGHT_QUERY","storage","window","localStorage","getItem","err","console","warn","set","setItem","getPreferredColorScheme","matchMedia","matches","useClientsideEffect","TopLevelColorModeProvider","outerCtx","children","outerTheme","_ref2","useColorSchemeMediaQuery","useLocalStorage","_useState","preferredMode","colorMode","setColorMode","stored","document","documentElement","classList","remove","setPreferredColorScheme","preferredColorScheme","darkMQL","addEventListener","addListener","_darkMQL","removeEventListener","removeListener","process","env","NODE_ENV","_outerTheme$colors","indexOf","newTheme","useThemeWithAppliedColorMode","newCtx","createElement","context","GlobalColorStyles","useColorMode","_useThemeUI","Error","omitModes","res","copyRawColors","outerThemeRawColors","_i","_Object$entries","entries","_Object$entries$_i","startsWith","newValue","_ref3","currentColorMode","_ref4","_ref4$initialColorMod","alreadyHasRawColors","_extends2","_modes","_ref5","html","NestedColorModeProvider","_ref6","_newTheme$config2","_useState2","_newTheme$config","needsRerender","setNeedsRerender","themeColors","colorVars","Number","suppressHydrationWarning","ColorModeProvider","_ref7","isTopLevelColorModeProvider","noflash","InitializeColorMode","dangerouslySetInnerHTML","__html"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,OAAlD,EAA2DC,eAA3D,QAAkF,OAAlF;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,kCAA1B,QAAoE,gBAApE;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,SAASC,QAAT,GAAoB;AAClBA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAC5C,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACzC,UAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAEA,WAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AACtB,YAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AACrDL,UAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AACD;AACF;AACF;;AAED,WAAOL,MAAP;AACD,GAZD;;AAcA,SAAOH,QAAQ,CAACY,KAAT,CAAe,IAAf,EAAqBP,SAArB,CAAP;AACD;;AAED,IAAIQ,SAAS,GAAG,SAASA,SAAT,CAAmBL,GAAnB,EAAwB;AACtC,SAAO,gBAAgBA,GAAG,CAACM,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAvB;AACD,CAFD;;AAIA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBP,GAApB,EAAyB;AACxC,SAAO,SAASK,SAAS,CAACL,GAAD,CAAlB,GAA0B,GAAjC;AACD,CAFD;;AAIA,IAAIQ,IAAI,GAAG,SAASA,IAAT,GAAgB;AACzB,OAAK,IAAIC,IAAI,GAAGZ,SAAS,CAACC,MAArB,EAA6BY,IAAI,GAAG,IAAIC,KAAJ,CAAUF,IAAV,CAApC,EAAqDG,IAAI,GAAG,CAAjE,EAAoEA,IAAI,GAAGH,IAA3E,EAAiFG,IAAI,EAArF,EAAyF;AACvFF,IAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaf,SAAS,CAACe,IAAD,CAAtB;AACD;;AAED,SAAOF,IAAI,CAACG,MAAL,CAAYC,OAAZ,EAAqBN,IAArB,CAA0B,GAA1B,CAAP;AACD,CAND;;AAQA,IAAIO,YAAY,GAAG,IAAIC,GAAJ,CAAQ,CAAC,qBAAD,EAAwB,sBAAxB,EAAgD,oBAAhD,EAAsE,kBAAtE,EAA0F,iBAA1F,EAA6G,QAA7G,CAAR,CAAnB,C,CAAoJ;;AAEpJ,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,GAA5B,EAAiCC,MAAjC,EAAyC;AAChE,MAAIC,IAAI,GAAGT,KAAK,CAACU,OAAN,CAAcH,GAAd,IAAqB,EAArB,GAA0B,EAArC;;AAEA,OAAK,IAAIlB,GAAT,IAAgBkB,GAAhB,EAAqB;AACnB,QAAII,KAAK,GAAGJ,GAAG,CAAClB,GAAD,CAAf;AACA,QAAIuB,IAAI,GAAGf,IAAI,CAACW,MAAD,EAASnB,GAAT,CAAf;;AAEA,QAAIsB,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACtCF,MAAAA,IAAI,CAACpB,GAAD,CAAJ,GAAYiB,kBAAkB,CAACK,KAAD,EAAQC,IAAR,CAA9B;AACA;AACD;;AAED,QAAIR,YAAY,CAACS,GAAb,CAAiBxB,GAAjB,CAAJ,EAA2B;AACzBoB,MAAAA,IAAI,CAACpB,GAAD,CAAJ,GAAYsB,KAAZ;AACA;AACD;;AAEDF,IAAAA,IAAI,CAACpB,GAAD,CAAJ,GAAYO,UAAU,CAACgB,IAAD,CAAtB;AACD;;AAED,SAAOH,IAAP;AACD,CArBD;AAsBA;AACA;AACA;AACA;;;AAEA,IAAIK,cAAc,GAAG,SAASA,cAAT,CAAwBN,MAAxB,EAAgCD,GAAhC,EAAqC;AACxD,MAAIQ,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAI1B,GAAT,IAAgBkB,GAAhB,EAAqB;AACnB,QAAIlB,GAAG,KAAK,OAAZ,EAAqB;AACrB,QAAIuB,IAAI,GAAGf,IAAI,CAACW,MAAD,EAASnB,GAAT,CAAf;AACA,QAAIsB,KAAK,GAAGJ,GAAG,CAAClB,GAAD,CAAf;;AAEA,QAAIsB,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACtCI,MAAAA,IAAI,GAAGlC,QAAQ,CAAC,EAAD,EAAKkC,IAAL,EAAWD,cAAc,CAACF,IAAD,EAAOD,KAAP,CAAzB,CAAf;AACD,KAFD,MAEO;AACLI,MAAAA,IAAI,CAACrB,SAAS,CAACkB,IAAD,CAAV,CAAJ,GAAwBD,KAAxB;AACD;AACF;;AAED,SAAOI,IAAP;AACD,CAhBD;AAiBA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAC5D,MAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpBA,IAAAA,KAAK,GAAG,EAAR;AACD;;AAED,MAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,IAAgBF,KAAhB,IAAyB,EAApC;AAAA,MACIG,mBAAmB,GAAGF,IAAI,CAACE,mBAD/B;AAAA,MAEIC,oBAAoB,GAAGH,IAAI,CAACG,oBAFhC;AAAA,MAGIC,kBAAkB,GAAGJ,IAAI,CAACI,kBAH9B;AAAA,MAIIC,aAAa,GAAGL,IAAI,CAACK,aAJzB;;AAMA,MAAIC,MAAM,GAAGP,KAAK,CAACQ,SAAN,IAAmBR,KAAK,CAACO,MAAtC;AACA,MAAI,CAACA,MAAD,IAAWD,aAAa,KAAK,KAAjC,EAAwC,OAAO,EAAP;;AAExC,MAAIH,mBAAmB,KAAK,KAA5B,EAAmC;AACjC,WAAO1C,GAAG,CAAC;AACTgD,MAAAA,KAAK,EAAE,MADE;AAETC,MAAAA,EAAE,EAAE;AAFK,KAAD,CAAH,CAGJV,KAHI,CAAP;AAID;;AAED,MAAIW,KAAK,GAAGJ,MAAM,CAACI,KAAP,IAAgB,EAA5B;;AAEA,MAAIC,MAAM,GAAGC,uBAAuB,CAACN,MAAD,EAASI,KAAT,CAApC;;AAEA,MAAIN,kBAAJ,EAAwB;AACtB,QAAIS,IAAI,GAAGT,kBAAkB,KAAK,SAAvB,IAAoCA,kBAAkB,KAAKD,oBAA3D,GAAkFG,MAAlF,GAA2FI,KAAK,CAACN,kBAAD,CAA3G;AACAO,IAAAA,MAAM,CAAC,cAAD,CAAN,GAAyBf,cAAc,CAAC,QAAD,EAAWiB,IAAX,CAAvC;AACD;;AAED,MAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBN,KAAzB,EAAgC;AACpD,WAAO9B,UAAU,CAAC,YAAY8B,KAAb,CAAjB;AACD,GAFD;;AAIA,SAAOhD,GAAG,CAACG,QAAQ,CAAC,EAAD,EAAKgD,MAAL,EAAa;AAC9BH,IAAAA,KAAK,EAAEM,eAAe,CAAC,MAAD,CADQ;AAE9BL,IAAAA,EAAE,EAAEK,eAAe,CAAC,YAAD;AAFW,GAAb,CAAT,CAAH,CAGHf,KAHG,CAAP;AAID,CAtCD;AAuCA;AACA;AACA;AACA;AACA;;;AAEA,SAASa,uBAAT,CAAiCN,MAAjC,EAAyCI,KAAzC,EAAgD;AAC9C,MAAIC,MAAM,GAAGf,cAAc,CAAC,QAAD,EAAWU,MAAX,CAA3B;;AAEA1C,EAAAA,MAAM,CAACmD,IAAP,CAAYL,KAAZ,EAAmBM,OAAnB,CAA2B,UAAUH,IAAV,EAAgB;AACzC,QAAII,SAAS,GAAG,eAAeJ,IAA/B;AACA,QAAI1C,GAAG,GAAG,MAAM8C,SAAN,GAAkB,IAAlB,GAAyBA,SAAzB,GAAqC,IAA/C;AACAN,IAAAA,MAAM,CAACxC,GAAD,CAAN,GAAcyB,cAAc,CAAC,QAAD,EAAWc,KAAK,CAACG,IAAD,CAAhB,CAA5B;AACD,GAJD;AAKA,SAAOF,MAAP;AACD;;AAED,IAAIO,WAAW,GAAG,qBAAlB;AACA,IAAIC,UAAU,GAAG,8BAAjB;AACA,IAAIC,WAAW,GAAG,+BAAlB;AACA,IAAIC,OAAO,GAAG;AACZ5D,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,QAAI;AACF,aAAO6D,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BN,WAA5B,CAAP;AACD,KAFD,CAEE,OAAOO,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAa,qEAAb,EAAoF,kCAApF,EAAwHF,GAAxH;AACD;AACF,GAPW;AAQZG,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAanC,KAAb,EAAoB;AACvB,QAAI;AACF6B,MAAAA,MAAM,CAACC,YAAP,CAAoBM,OAApB,CAA4BX,WAA5B,EAAyCzB,KAAzC;AACD,KAFD,CAEE,OAAOgC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,IAAR,CAAa,qEAAb,EAAoF,kCAApF,EAAwHF,GAAxH;AACD;AACF;AAdW,CAAd;;AAiBA,IAAIK,uBAAuB,GAAG,SAASA,uBAAT,GAAmC;AAC/D,MAAI,OAAOR,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACS,UAA5C,EAAwD;AACtD,QAAIT,MAAM,CAACS,UAAP,CAAkBZ,UAAlB,EAA8Ba,OAAlC,EAA2C;AACzC,aAAO,MAAP;AACD;;AAED,QAAIV,MAAM,CAACS,UAAP,CAAkBX,WAAlB,EAA+BY,OAAnC,EAA4C;AAC1C,aAAO,OAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD,CAZD;;AAcA,IAAIC,mBAAmB,GAAG,OAAOX,MAAP,KAAkB,WAAlB,GAAgC,YAAY,CAAE,CAA9C,GAAiDlE,eAA3E;;AAEA,IAAI8E,yBAAyB,GAAG,SAASA,yBAAT,CAAmClC,IAAnC,EAAyC;AACvE,MAAImC,QAAQ,GAAGnC,IAAI,CAACmC,QAApB;AAAA,MACIC,QAAQ,GAAGpC,IAAI,CAACoC,QADpB;AAEA,MAAIC,UAAU,GAAGF,QAAQ,CAACpC,KAAT,IAAkB,EAAnC;;AAEA,MAAIuC,KAAK,GAAGD,UAAU,CAACpC,MAAX,IAAqBoC,UAAjC;AAAA,MACIlC,oBAAoB,GAAGmC,KAAK,CAACnC,oBADjC;AAAA,MAEIoC,wBAAwB,GAAGD,KAAK,CAACC,wBAFrC;AAAA,MAGIC,eAAe,GAAGF,KAAK,CAACE,eAH5B;;AAKA,MAAIC,SAAS,GAAGzF,QAAQ,CAAC,YAAY;AACnC,QAAI0F,aAAa,GAAGH,wBAAwB,KAAK,KAA7B,IAAsCT,uBAAuB,EAAjF;AACA,WAAOY,aAAa,IAAIvC,oBAAxB;AACD,GAHuB,CAAxB;AAAA,MAIIwC,SAAS,GAAGF,SAAS,CAAC,CAAD,CAJzB;AAAA,MAKIG,YAAY,GAAGH,SAAS,CAAC,CAAD,CAL5B,CAVuE,CAetC;AACjC;;;AAGAR,EAAAA,mBAAmB,CAAC,YAAY;AAC9B,QAAIY,MAAM,GAAGL,eAAe,KAAK,KAApB,IAA6BnB,OAAO,CAAC5D,GAAR,EAA1C;;AAEA,QAAI,OAAOqF,QAAP,KAAoB,WAAxB,EAAqC;AACnCA,MAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmCC,MAAnC,CAA0C,cAAcJ,MAAxD;AACD;;AAED,QAAIN,wBAAwB,KAAK,QAA7B,IAAyCM,MAAzC,IAAmDA,MAAM,KAAKF,SAAlE,EAA6E;AAC3EA,MAAAA,SAAS,GAAGE,MAAZ;AACAD,MAAAA,YAAY,CAACC,MAAD,CAAZ;AACD;AACF,GAXkB,EAWhB,EAXgB,CAAnB,CAnBuE,CA8B/D;;AAER5F,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI0F,SAAS,IAAIH,eAAe,KAAK,KAArC,EAA4C;AAC1CnB,MAAAA,OAAO,CAACO,GAAR,CAAYe,SAAZ;AACD;AACF,GAJQ,EAIN,CAACA,SAAD,EAAYH,eAAZ,CAJM,CAAT;AAKA,MAAIU,uBAAuB,GAAGhG,WAAW,CAAC,YAAY;AACpD,QAAIiG,oBAAoB,GAAGrB,uBAAuB,EAAlD;AACAc,IAAAA,YAAY,CAACO,oBAAoB,IAAIhD,oBAAzB,CAAZ;AACD,GAHwC,EAGtC,CAACA,oBAAD,CAHsC,CAAzC;AAIAlD,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIsF,wBAAwB,KAAK,QAA7B,IAAyCjB,MAAM,CAACS,UAApD,EAAgE;AAC9D;AACA;AACA,UAAIqB,OAAO,GAAG9B,MAAM,CAACS,UAAP,CAAkBZ,UAAlB,CAAd;;AAEA,UAAI,OAAOiC,OAAO,CAACC,gBAAf,KAAoC,UAAxC,EAAoD;AAClDD,QAAAA,OAAO,CAACC,gBAAR,CAAyB,QAAzB,EAAmCH,uBAAnC;AACD,OAFD,MAEO,IAAI,OAAOE,OAAO,CAACE,WAAf,KAA+B,UAAnC,EAA+C;AACpDF,QAAAA,OAAO,CAACE,WAAR,CAAoBJ,uBAApB;AACD;AACF;;AAED,WAAO,YAAY;AACjB,UAAIX,wBAAwB,KAAK,QAA7B,IAAyCjB,MAAM,CAACS,UAApD,EAAgE;AAC9D,YAAIwB,QAAQ,GAAGjC,MAAM,CAACS,UAAP,CAAkBZ,UAAlB,CAAf;;AAEA,YAAI,OAAOoC,QAAQ,CAACC,mBAAhB,KAAwC,UAA5C,EAAwD;AACtDD,UAAAA,QAAQ,CAACC,mBAAT,CAA6B,QAA7B,EAAuCN,uBAAvC;AACD,SAFD,MAEO,IAAI,OAAOK,QAAQ,CAACE,cAAhB,KAAmC,UAAvC,EAAmD;AACxDF,UAAAA,QAAQ,CAACE,cAAT,CAAwBP,uBAAxB;AACD;AACF;AACF,KAVD;AAWD,GAxBQ,EAwBN,CAACX,wBAAD,EAA2BW,uBAA3B,CAxBM,CAAT;;AA0BA,MAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAIC,kBAAJ;;AAEA,QAAI,CAACA,kBAAkB,GAAGxB,UAAU,CAAC/B,MAAjC,KAA4C,IAA5C,IAAoDuD,kBAAkB,CAACnD,KAAvE,IAAgFP,oBAAhF,IAAwGvC,MAAM,CAACmD,IAAP,CAAYsB,UAAU,CAAC/B,MAAX,CAAkBI,KAA9B,EAAqCoD,OAArC,CAA6C3D,oBAA7C,IAAqE,CAAC,CAAlL,EAAqL;AACnLuB,MAAAA,OAAO,CAACC,IAAR,CAAa,wEAAwE,sDAArF;AACD;AACF;;AAED,MAAIoC,QAAQ,GAAGC,4BAA4B,CAAC;AAC1CrB,IAAAA,SAAS,EAAEA,SAD+B;AAE1CN,IAAAA,UAAU,EAAEA;AAF8B,GAAD,CAA3C;;AAKA,MAAI4B,MAAM,GAAGtG,QAAQ,CAAC,EAAD,EAAKwE,QAAL,EAAe;AAClCpC,IAAAA,KAAK,EAAEgE,QAD2B;AAElCpB,IAAAA,SAAS,EAAEA,SAFuB;AAGlCC,IAAAA,YAAY,EAAEA;AAHoB,GAAf,CAArB;;AAMA,SAAO,aAAa7F,KAAK,CAACmH,aAAN,CAAoB3G,kCAApB,EAAwD;AAC1E4G,IAAAA,OAAO,EAAEF;AADiE,GAAxD,EAEjB,aAAalH,KAAK,CAACmH,aAAN,CAAoBE,iBAApB,EAAuC;AACrDrE,IAAAA,KAAK,EAAEgE;AAD8C,GAAvC,CAFI,EAIhB3B,QAJgB,CAApB;AAKD,CA3FD;;AA6FA,SAASiC,YAAT,GAAwB;AACtB,MAAIC,WAAW,GAAGjH,UAAU,EAA5B;AAAA,MACIsF,SAAS,GAAG2B,WAAW,CAAC3B,SAD5B;AAAA,MAEIC,YAAY,GAAG0B,WAAW,CAAC1B,YAF/B;;AAIA,MAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC;AACtC,UAAM,IAAI2B,KAAJ,CAAU,yDAAV,CAAN;AACD,GAPqB,CAOpB;;;AAGF,SAAO,CAAC5B,SAAD,EAAYC,YAAZ,CAAP;AACD;;AAED,IAAI4B,SAAS,GAAG,SAASA,SAAT,CAAmBlE,MAAnB,EAA2B;AACzC,MAAImE,GAAG,GAAG9G,QAAQ,CAAC,EAAD,EAAK2C,MAAL,CAAlB;;AAEA,SAAOmE,GAAG,CAAC/D,KAAX;AACA,SAAO+D,GAAP;AACD,CALD;;AAOA,SAASC,aAAT,CAAuBpE,MAAvB,EAA+BqE,mBAA/B,EAAoD;AAClD,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,eAAe,GAAGjH,MAAM,CAACkH,OAAP,CAAexE,MAAf,CAAnC,EAA2DsE,EAAE,GAAGC,eAAe,CAAC5G,MAAhF,EAAwF2G,EAAE,EAA1F,EAA8F;AAC5F,QAAIG,kBAAkB,GAAGF,eAAe,CAACD,EAAD,CAAxC;AAAA,QACIzG,GAAG,GAAG4G,kBAAkB,CAAC,CAAD,CAD5B;AAAA,QAEItF,KAAK,GAAGsF,kBAAkB,CAAC,CAAD,CAF9B;;AAIA,QAAI,OAAOtF,KAAP,KAAiB,QAAjB,IAA6B,CAACA,KAAK,CAACuF,UAAN,CAAiB,MAAjB,CAAlC,EAA4D;AAC1DL,MAAAA,mBAAmB,CAACxG,GAAD,CAAnB,GAA2BsB,KAA3B;AACD,KAFD,MAEO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AACpC,UAAIwF,QAAQ,GAAGtH,QAAQ,CAAC,EAAD,EAAKgH,mBAAmB,CAACxG,GAAD,CAAxB,CAAvB;;AAEAuG,MAAAA,aAAa,CAACjF,KAAD,EAAQwF,QAAR,CAAb;AACAN,MAAAA,mBAAmB,CAACxG,GAAD,CAAnB,GAA2B8G,QAA3B;AACD;AACF;AACF;;AAED,SAASjB,4BAAT,CAAsCkB,KAAtC,EAA6C;AAC3C,MAAI7C,UAAU,GAAG6C,KAAK,CAAC7C,UAAvB;AAAA,MACIM,SAAS,GAAGuC,KAAK,CAACvC,SADtB;AAEA,MAAI5C,KAAK,GAAG5C,OAAO,CAAC,YAAY;AAC9B,QAAIsH,GAAG,GAAG9G,QAAQ,CAAC,EAAD,EAAK0E,UAAL,CAAlB;;AAEA,QAAI3B,KAAK,GAAGjD,GAAG,CAACgH,GAAD,EAAM,cAAN,EAAsB,EAAtB,CAAf;AACA,QAAIU,gBAAgB,GAAG1H,GAAG,CAACiD,KAAD,EAAQiC,SAAR,EAAmB,EAAnB,CAA1B;;AAEA,QAAIA,SAAJ,EAAe;AACb8B,MAAAA,GAAG,CAACnE,MAAJ,GAAa3C,QAAQ,CAAC,EAAD,EAAK8G,GAAG,CAACnE,MAAT,EAAiB6E,gBAAjB,CAArB;AACD;;AAED,QAAIC,KAAK,GAAG/C,UAAU,CAACpC,MAAX,IAAqBoC,UAAjC;AAAA,QACInC,mBAAmB,GAAGkF,KAAK,CAAClF,mBADhC;AAAA,QAEImF,qBAAqB,GAAGD,KAAK,CAACjF,oBAFlC;AAAA,QAGIA,oBAAoB,GAAGkF,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,WAAnC,GAAiDA,qBAH5E;;AAKA,QAAIV,mBAAmB,GAAGtC,UAAU,CAAC9B,SAAX,IAAwB8B,UAAU,CAAC/B,MAAnC,IAA6C,EAAvE;;AAEA,QAAIJ,mBAAmB,KAAK,KAA5B,EAAmC;AACjC,UAAIoF,mBAAmB,GAAGb,GAAG,CAAClE,SAAJ,IAAiB,IAA3C;AACA,UAAID,MAAM,GAAGmE,GAAG,CAACnE,MAAJ,IAAc,EAA3B;;AAEA,UAAIgF,mBAAJ,EAAyB;AACvBX,QAAAA,mBAAmB,GAAGhH,QAAQ,CAAC,EAAD,EAAKgH,mBAAL,CAA9B;AACAD,QAAAA,aAAa,CAACpE,MAAD,EAASqE,mBAAT,CAAb;;AAEA,YAAIA,mBAAmB,CAACjE,KAAxB,EAA+B;AAC7BiE,UAAAA,mBAAmB,CAACjE,KAApB,CAA0BP,oBAA1B,IAAkDqE,SAAS,CAACG,mBAAD,CAA3D;AACD;;AAEDF,QAAAA,GAAG,CAAClE,SAAJ,GAAgBoE,mBAAhB;AACD,OATD,MASO;AACL,YAAI,EAAE,WAAWA,mBAAb,CAAJ,EAAuC;AACrCF,UAAAA,GAAG,CAAClE,SAAJ,GAAgBD,MAAhB;AACD,SAFD,MAEO;AACL,cAAIiF,SAAJ;;AAEA,cAAIC,MAAM,GAAG7H,QAAQ,EAAE4H,SAAS,GAAG,EAAZ,EAAgBA,SAAS,CAACpF,oBAAD,CAAT,GAAkCqE,SAAS,CAACG,mBAAD,CAA3D,EAAkFY,SAApF,GAAgGZ,mBAAmB,CAACjE,KAApH,CAArB;;AAEA+D,UAAAA,GAAG,CAAClE,SAAJ,GAAgB5C,QAAQ,CAAC,EAAD,EAAK2C,MAAL,EAAa;AACnCI,YAAAA,KAAK,EAAE8E;AAD4B,WAAb,CAAxB;AAGA;AACD;AACF;;AAEDf,MAAAA,GAAG,CAACnE,MAAJ,GAAalB,kBAAkB,CAACoF,SAAS,CAACG,mBAAD,CAAV,EAAiC,QAAjC,CAA/B;AACD;;AAED,WAAOF,GAAP;AACD,GAjDkB,EAiDhB,CAAC9B,SAAD,EAAYN,UAAZ,CAjDgB,CAAnB;AAkDA,SAAOtC,KAAP;AACD;;AAED,SAASqE,iBAAT,CAA2BqB,KAA3B,EAAkC;AAChC,MAAI1F,KAAK,GAAG0F,KAAK,CAAC1F,KAAlB;AACA,SAAOzC,GAAG,CAACI,MAAD,EAAS;AACjBiD,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,aAAO;AACL+E,QAAAA,IAAI,EAAE5F,mBAAmB,CAACC,KAAD;AADpB,OAAP;AAGD;AALgB,GAAT,CAAV;AAOD;;AAED,SAAS4F,uBAAT,CAAiCC,KAAjC,EAAwC;AACtC,MAAIC,iBAAJ;;AAEA,MAAI1D,QAAQ,GAAGyD,KAAK,CAACzD,QAArB;AAAA,MACIC,QAAQ,GAAGwD,KAAK,CAACxD,QADrB;AAEA,MAAI2B,QAAQ,GAAGC,4BAA4B,CAAC;AAC1C3B,IAAAA,UAAU,EAAEF,QAAQ,CAACpC,KADqB;AAE1C4C,IAAAA,SAAS,EAAER,QAAQ,CAACQ;AAFsB,GAAD,CAA3C,CALsC,CAQlC;AACJ;;AAEA,MAAImD,UAAU,GAAG9I,QAAQ,EAAE;AAC3B;AACA;AACA,cAAY;AACV,QAAI+I,gBAAJ;;AAEA,WAAO,CAAC,CAACA,gBAAgB,GAAGhC,QAAQ,CAAC9D,MAA7B,KAAwC,IAAxC,GAA+C,KAAK,CAApD,GAAwD8F,gBAAgB,CAACvD,eAA1E,MAA+F,KAAtG;AACD,GAPwB,CAAzB;AAAA,MAQIwD,aAAa,GAAGF,UAAU,CAAC,CAAD,CAR9B;AAAA,MASIG,gBAAgB,GAAGH,UAAU,CAAC,CAAD,CATjC;;AAWA7D,EAAAA,mBAAmB,CAAC,YAAY;AAC9B,WAAO,KAAKgE,gBAAgB,CAAC,KAAD,CAA5B;AACD,GAFkB,EAEhB,EAFgB,CAAnB;AAGA,MAAIC,WAAW,GAAGnC,QAAQ,CAACxD,SAAT,IAAsBwD,QAAQ,CAACzD,MAAjD;AACA,MAAIJ,mBAAmB,GAAG,CAAC2F,iBAAiB,GAAG9B,QAAQ,CAAC9D,MAA9B,KAAyC,IAAzC,GAAgD,KAAK,CAArD,GAAyD4F,iBAAiB,CAAC3F,mBAArG;AACA,MAAIiG,SAAS,GAAGhJ,OAAO,CAAC,YAAY;AAClC,QAAI+C,mBAAmB,KAAK,KAA5B,EAAmC;AACjC,aAAO,EAAP;AACD;;AAED,QAAII,MAAM,GAAG4F,WAAW,IAAI,EAA5B;AACA,WAAO1I,GAAG,CAACoD,uBAAuB,CAACN,MAAD,EAASA,MAAM,CAACI,KAAP,IAAgB,EAAzB,CAAxB,CAAH,CAAyDqD,QAAzD,CAAP;AACD,GAPsB,EAOpB,CAACA,QAAD,EAAWmC,WAAX,EAAwBhG,mBAAxB,CAPoB,CAAvB;AAQA,SAAO,aAAanD,KAAK,CAACmH,aAAN,CAAoB3G,kCAApB,EAAwD;AAC1E4G,IAAAA,OAAO,EAAExG,QAAQ,CAAC,EAAD,EAAKwE,QAAL,EAAe;AAC9BpC,MAAAA,KAAK,EAAEgE;AADuB,KAAf;AADyD,GAAxD,EAIjBzG,GAAG,CAAC,KAAD,EAAQ;AACZ,oCAAgC,IADpB;AAEZ;AACA;AACAa,IAAAA,GAAG,EAAEiI,MAAM,CAACJ,aAAD,CAJC;AAKZK,IAAAA,wBAAwB,EAAE,IALd;AAMZ7I,IAAAA,GAAG,EAAE2I,SANO;AAOZ/D,IAAAA,QAAQ,EAAEA;AAPE,GAAR,CAJc,CAApB;AAaD;;AAED,IAAIkE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,KAA3B,EAAkC;AACxD,MAAInE,QAAQ,GAAGmE,KAAK,CAACnE,QAArB;AACA,MAAID,QAAQ,GAAG9E,UAAU,EAAzB;AACA,MAAImJ,2BAA2B,GAAG,OAAOrE,QAAQ,CAACS,YAAhB,KAAiC,UAAnE;AACA,SAAO4D,2BAA2B,GAAG,aAAazJ,KAAK,CAACmH,aAAN,CAAoBhC,yBAApB,EAA+C;AAC/FC,IAAAA,QAAQ,EAAEA;AADqF,GAA/C,EAE/CC,QAF+C,CAAhB,GAEnB,aAAarF,KAAK,CAACmH,aAAN,CAAoByB,uBAApB,EAA6C;AACvExD,IAAAA,QAAQ,EAAEA;AAD6D,GAA7C,EAEzBC,QAFyB,CAF5B;AAKD,CATD;;AAUA,IAAIqE,OAAO,GAAG,0LAAd;;AACA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,GAA+B;AACvD,SAAOpJ,GAAG,CAAC,QAAD,EAAW;AACnBa,IAAAA,GAAG,EAAE,mBADc;AAEnBwI,IAAAA,uBAAuB,EAAE;AACvBC,MAAAA,MAAM,EAAEH;AADe;AAFN,GAAX,CAAV;AAMD,CAPD;;AASA,SAASH,iBAAT,EAA4BI,mBAA5B,EAAiDrC,YAAjD","sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useLayoutEffect } from 'react';\nimport { useThemeUI, jsx, __ThemeUIInternalBaseThemeProvider } from '@theme-ui/core';\nimport { css, get } from '@theme-ui/css';\nimport { Global } from '@emotion/react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar toVarName = function toVarName(key) {\n  return \"--theme-ui-\" + key.replace('-__default', '');\n};\n\nvar toVarValue = function toVarValue(key) {\n  return \"var(\" + toVarName(key) + \")\";\n};\n\nvar join = function join() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.filter(Boolean).join('-');\n};\n\nvar reservedKeys = new Set(['useCustomProperties', 'initialColorModeName', 'printColorModeName', 'initialColorMode', 'useLocalStorage', 'config']); // convert theme values to custom properties\n\nvar toCustomProperties = function toCustomProperties(obj, parent) {\n  var next = Array.isArray(obj) ? [] : {};\n\n  for (var key in obj) {\n    var value = obj[key];\n    var name = join(parent, key);\n\n    if (value && typeof value === 'object') {\n      next[key] = toCustomProperties(value, name);\n      continue;\n    }\n\n    if (reservedKeys.has(key)) {\n      next[key] = value;\n      continue;\n    }\n\n    next[key] = toVarValue(name);\n  }\n\n  return next;\n};\n/**\n * @internal\n * Recursively transforms an object into CSS variables excluding \"modes\" key.\n */\n\nvar __objectToVars = function __objectToVars(parent, obj) {\n  var vars = {};\n\n  for (var key in obj) {\n    if (key === 'modes') continue;\n    var name = join(parent, key);\n    var value = obj[key];\n\n    if (value && typeof value === 'object') {\n      vars = _extends({}, vars, __objectToVars(name, value));\n    } else {\n      vars[toVarName(name)] = value;\n    }\n  }\n\n  return vars;\n};\n/**\n * @internal\n * Creates root styles for color modes.\n * - Transforms color scale into CSS variables.\n * - Sets background and text color.\n */\n\nvar __createColorStyles = function __createColorStyles(theme) {\n  if (theme === void 0) {\n    theme = {};\n  }\n\n  var _ref = theme.config || theme || {},\n      useCustomProperties = _ref.useCustomProperties,\n      initialColorModeName = _ref.initialColorModeName,\n      printColorModeName = _ref.printColorModeName,\n      useRootStyles = _ref.useRootStyles;\n\n  var colors = theme.rawColors || theme.colors;\n  if (!colors || useRootStyles === false) return {};\n\n  if (useCustomProperties === false) {\n    return css({\n      color: 'text',\n      bg: 'background'\n    })(theme);\n  }\n\n  var modes = colors.modes || {};\n\n  var styles = __createColorProperties(colors, modes);\n\n  if (printColorModeName) {\n    var mode = printColorModeName === 'initial' || printColorModeName === initialColorModeName ? colors : modes[printColorModeName];\n    styles['@media print'] = __objectToVars('colors', mode);\n  }\n\n  var colorToVarValue = function colorToVarValue(color) {\n    return toVarValue(\"colors-\" + color);\n  };\n\n  return css(_extends({}, styles, {\n    color: colorToVarValue('text'),\n    bg: colorToVarValue('background')\n  }))(theme);\n};\n/**\n * @internal\n * Returns an object with colors turned into Custom CSS Properties and\n * .theme-ui-<colormode> classes used for no-flash serverside rendering.\n */\n\nfunction __createColorProperties(colors, modes) {\n  var styles = __objectToVars('colors', colors);\n\n  Object.keys(modes).forEach(function (mode) {\n    var className = \".theme-ui-\" + mode;\n    var key = \"&\" + className + \", \" + className + \" &\";\n    styles[key] = __objectToVars('colors', modes[mode]);\n  });\n  return styles;\n}\n\nvar STORAGE_KEY = 'theme-ui-color-mode';\nvar DARK_QUERY = '(prefers-color-scheme: dark)';\nvar LIGHT_QUERY = '(prefers-color-scheme: light)';\nvar storage = {\n  get: function get() {\n    try {\n      return window.localStorage.getItem(STORAGE_KEY);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  },\n  set: function set(value) {\n    try {\n      window.localStorage.setItem(STORAGE_KEY, value);\n    } catch (err) {\n      console.warn('localStorage is disabled and color mode might not work as expected.', 'Please check your Site Settings.', err);\n    }\n  }\n};\n\nvar getPreferredColorScheme = function getPreferredColorScheme() {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    if (window.matchMedia(DARK_QUERY).matches) {\n      return 'dark';\n    }\n\n    if (window.matchMedia(LIGHT_QUERY).matches) {\n      return 'light';\n    }\n  }\n\n  return null;\n};\n\nvar useClientsideEffect = typeof window === 'undefined' ? function () {} : useLayoutEffect;\n\nvar TopLevelColorModeProvider = function TopLevelColorModeProvider(_ref) {\n  var outerCtx = _ref.outerCtx,\n      children = _ref.children;\n  var outerTheme = outerCtx.theme || {};\n\n  var _ref2 = outerTheme.config || outerTheme,\n      initialColorModeName = _ref2.initialColorModeName,\n      useColorSchemeMediaQuery = _ref2.useColorSchemeMediaQuery,\n      useLocalStorage = _ref2.useLocalStorage;\n\n  var _useState = useState(function () {\n    var preferredMode = useColorSchemeMediaQuery !== false && getPreferredColorScheme();\n    return preferredMode || initialColorModeName;\n  }),\n      colorMode = _useState[0],\n      setColorMode = _useState[1]; // on first render, we read the color mode from localStorage and\n  // clear the class on document element body\n\n\n  useClientsideEffect(function () {\n    var stored = useLocalStorage !== false && storage.get();\n\n    if (typeof document !== 'undefined') {\n      document.documentElement.classList.remove('theme-ui-' + stored);\n    }\n\n    if (useColorSchemeMediaQuery !== 'system' && stored && stored !== colorMode) {\n      colorMode = stored;\n      setColorMode(stored);\n    }\n  }, []); // when mode changes, we save it to localStorage\n\n  useEffect(function () {\n    if (colorMode && useLocalStorage !== false) {\n      storage.set(colorMode);\n    }\n  }, [colorMode, useLocalStorage]);\n  var setPreferredColorScheme = useCallback(function () {\n    var preferredColorScheme = getPreferredColorScheme();\n    setColorMode(preferredColorScheme || initialColorModeName);\n  }, [initialColorModeName]);\n  useEffect(function () {\n    if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n      // It doesn't matter if we add the listener only to the dark media query\n      // Because in our callback function we'll check for both media queries (light and dark).\n      var darkMQL = window.matchMedia(DARK_QUERY);\n\n      if (typeof darkMQL.addEventListener === 'function') {\n        darkMQL.addEventListener('change', setPreferredColorScheme);\n      } else if (typeof darkMQL.addListener === 'function') {\n        darkMQL.addListener(setPreferredColorScheme);\n      }\n    }\n\n    return function () {\n      if (useColorSchemeMediaQuery === 'system' && window.matchMedia) {\n        var _darkMQL = window.matchMedia(DARK_QUERY);\n\n        if (typeof _darkMQL.removeEventListener === 'function') {\n          _darkMQL.removeEventListener('change', setPreferredColorScheme);\n        } else if (typeof _darkMQL.removeListener === 'function') {\n          _darkMQL.removeListener(setPreferredColorScheme);\n        }\n      }\n    };\n  }, [useColorSchemeMediaQuery, setPreferredColorScheme]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    var _outerTheme$colors;\n\n    if ((_outerTheme$colors = outerTheme.colors) != null && _outerTheme$colors.modes && initialColorModeName && Object.keys(outerTheme.colors.modes).indexOf(initialColorModeName) > -1) {\n      console.warn('[theme-ui] The `initialColorModeName` value should be a unique name' + ' and cannot reference a key in `theme.colors.modes`.');\n    }\n  }\n\n  var newTheme = useThemeWithAppliedColorMode({\n    colorMode: colorMode,\n    outerTheme: outerTheme\n  });\n\n  var newCtx = _extends({}, outerCtx, {\n    theme: newTheme,\n    colorMode: colorMode,\n    setColorMode: setColorMode\n  });\n\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: newCtx\n  }, /*#__PURE__*/React.createElement(GlobalColorStyles, {\n    theme: newTheme\n  }), children);\n};\n\nfunction useColorMode() {\n  var _useThemeUI = useThemeUI(),\n      colorMode = _useThemeUI.colorMode,\n      setColorMode = _useThemeUI.setColorMode;\n\n  if (typeof setColorMode !== 'function') {\n    throw new Error(\"[useColorMode] requires the ColorModeProvider component\");\n  } // We're allowing the user to specify a narrower type for its color mode name.\n\n\n  return [colorMode, setColorMode];\n}\n\nvar omitModes = function omitModes(colors) {\n  var res = _extends({}, colors);\n\n  delete res.modes;\n  return res;\n};\n\nfunction copyRawColors(colors, outerThemeRawColors) {\n  for (var _i = 0, _Object$entries = Object.entries(colors); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (typeof value === 'string' && !value.startsWith('var(')) {\n      outerThemeRawColors[key] = value;\n    } else if (typeof value === 'object') {\n      var newValue = _extends({}, outerThemeRawColors[key]);\n\n      copyRawColors(value, newValue);\n      outerThemeRawColors[key] = newValue;\n    }\n  }\n}\n\nfunction useThemeWithAppliedColorMode(_ref3) {\n  var outerTheme = _ref3.outerTheme,\n      colorMode = _ref3.colorMode;\n  var theme = useMemo(function () {\n    var res = _extends({}, outerTheme);\n\n    var modes = get(res, 'colors.modes', {});\n    var currentColorMode = get(modes, colorMode, {});\n\n    if (colorMode) {\n      res.colors = _extends({}, res.colors, currentColorMode);\n    }\n\n    var _ref4 = outerTheme.config || outerTheme,\n        useCustomProperties = _ref4.useCustomProperties,\n        _ref4$initialColorMod = _ref4.initialColorModeName,\n        initialColorModeName = _ref4$initialColorMod === void 0 ? '__default' : _ref4$initialColorMod;\n\n    var outerThemeRawColors = outerTheme.rawColors || outerTheme.colors || {};\n\n    if (useCustomProperties !== false) {\n      var alreadyHasRawColors = res.rawColors != null;\n      var colors = res.colors || {};\n\n      if (alreadyHasRawColors) {\n        outerThemeRawColors = _extends({}, outerThemeRawColors);\n        copyRawColors(colors, outerThemeRawColors);\n\n        if (outerThemeRawColors.modes) {\n          outerThemeRawColors.modes[initialColorModeName] = omitModes(outerThemeRawColors);\n        }\n\n        res.rawColors = outerThemeRawColors;\n      } else {\n        if (!('modes' in outerThemeRawColors)) {\n          res.rawColors = colors;\n        } else {\n          var _extends2;\n\n          var _modes = _extends((_extends2 = {}, _extends2[initialColorModeName] = omitModes(outerThemeRawColors), _extends2), outerThemeRawColors.modes);\n\n          res.rawColors = _extends({}, colors, {\n            modes: _modes\n          });\n          /* modes doesn't match index signature by design */\n        }\n      }\n\n      res.colors = toCustomProperties(omitModes(outerThemeRawColors), 'colors');\n    }\n\n    return res;\n  }, [colorMode, outerTheme]);\n  return theme;\n}\n\nfunction GlobalColorStyles(_ref5) {\n  var theme = _ref5.theme;\n  return jsx(Global, {\n    styles: function styles() {\n      return {\n        html: __createColorStyles(theme)\n      };\n    }\n  });\n}\n\nfunction NestedColorModeProvider(_ref6) {\n  var _newTheme$config2;\n\n  var outerCtx = _ref6.outerCtx,\n      children = _ref6.children;\n  var newTheme = useThemeWithAppliedColorMode({\n    outerTheme: outerCtx.theme,\n    colorMode: outerCtx.colorMode\n  }); // Nested theme providers need to be rerendered after hydration for the correct\n  // color mode to apply.\n\n  var _useState2 = useState( // Note: we could also check some \"ssr-enabled\" flag as an optimization for\n  // SPAs, as deeply nested theme providers will also pay a performance penalty\n  // for this SSR bug fix\n  function () {\n    var _newTheme$config;\n\n    return ((_newTheme$config = newTheme.config) == null ? void 0 : _newTheme$config.useLocalStorage) !== false;\n  }),\n      needsRerender = _useState2[0],\n      setNeedsRerender = _useState2[1];\n\n  useClientsideEffect(function () {\n    return void setNeedsRerender(false);\n  }, []);\n  var themeColors = newTheme.rawColors || newTheme.colors;\n  var useCustomProperties = (_newTheme$config2 = newTheme.config) == null ? void 0 : _newTheme$config2.useCustomProperties;\n  var colorVars = useMemo(function () {\n    if (useCustomProperties === false) {\n      return {};\n    }\n\n    var colors = themeColors || {};\n    return css(__createColorProperties(colors, colors.modes || {}))(newTheme);\n  }, [newTheme, themeColors, useCustomProperties]);\n  return /*#__PURE__*/React.createElement(__ThemeUIInternalBaseThemeProvider, {\n    context: _extends({}, outerCtx, {\n      theme: newTheme\n    })\n  }, jsx('div', {\n    'data-themeui-nested-provider': true,\n    // the key here ensures that children will be rerendered after color\n    // mode is read from localStorage\n    key: Number(needsRerender),\n    suppressHydrationWarning: true,\n    css: colorVars,\n    children: children\n  }));\n}\n\nvar ColorModeProvider = function ColorModeProvider(_ref7) {\n  var children = _ref7.children;\n  var outerCtx = useThemeUI();\n  var isTopLevelColorModeProvider = typeof outerCtx.setColorMode !== 'function';\n  return isTopLevelColorModeProvider ? /*#__PURE__*/React.createElement(TopLevelColorModeProvider, {\n    outerCtx: outerCtx\n  }, children) : /*#__PURE__*/React.createElement(NestedColorModeProvider, {\n    outerCtx: outerCtx\n  }, children);\n};\nvar noflash = \"(function() { try {\\n  var mode = localStorage.getItem('theme-ui-color-mode');\\n  if (!mode) return\\n  document.documentElement.classList.add('theme-ui-' + mode);\\n} catch (e) {} })();\";\nvar InitializeColorMode = function InitializeColorMode() {\n  return jsx('script', {\n    key: 'theme-ui-no-flash',\n    dangerouslySetInnerHTML: {\n      __html: noflash\n    }\n  });\n};\n\nexport { ColorModeProvider, InitializeColorMode, useColorMode };\n"]},"metadata":{},"sourceType":"module"}