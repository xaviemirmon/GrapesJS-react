{"ast":null,"code":"import React from 'react';\nimport { useThemeUI, ThemeProvider as ThemeProvider$1, jsx, __themeUiDefaultContextValue } from '@theme-ui/core';\nimport { css } from '@theme-ui/css';\nimport { ColorModeProvider } from '@theme-ui/color-modes';\nimport { MDXProvider } from '@theme-ui/mdx';\nimport { Global } from '@emotion/react';\n\nvar RootStyles = function RootStyles() {\n  return jsx(Global, {\n    styles: function styles(emotionTheme) {\n      var _theme$config;\n\n      var theme = emotionTheme;\n\n      var _ref = theme.config || theme,\n          useRootStyles = _ref.useRootStyles;\n\n      if (useRootStyles === false || theme.styles && !theme.styles.root) {\n        return null;\n      }\n\n      var boxSizing = ((_theme$config = theme.config) == null ? void 0 : _theme$config.useBorderBox) === false ? undefined : 'border-box';\n      return css({\n        '*': {\n          boxSizing: boxSizing\n        },\n        html: {\n          variant: 'styles.root'\n        },\n        body: {\n          margin: 0\n        }\n      })(theme);\n    }\n  });\n};\n\nvar ThemeProvider = function ThemeProvider(_ref2) {\n  var theme = _ref2.theme,\n      components = _ref2.components,\n      children = _ref2.children;\n  var outer = useThemeUI();\n  var isTopLevel = outer === __themeUiDefaultContextValue;\n  return /*#__PURE__*/React.createElement(ThemeProvider$1, {\n    theme: theme\n  }, /*#__PURE__*/React.createElement(ColorModeProvider, null, isTopLevel && /*#__PURE__*/React.createElement(RootStyles, null), /*#__PURE__*/React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\n\nexport { ThemeProvider };","map":{"version":3,"sources":["/Users/xavier/Projects/GrapesJS-react/node_modules/@theme-ui/theme-provider/dist/theme-ui-theme-provider.esm.js"],"names":["React","useThemeUI","ThemeProvider","ThemeProvider$1","jsx","__themeUiDefaultContextValue","css","ColorModeProvider","MDXProvider","Global","RootStyles","styles","emotionTheme","_theme$config","theme","_ref","config","useRootStyles","root","boxSizing","useBorderBox","undefined","html","variant","body","margin","_ref2","components","children","outer","isTopLevel","createElement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,aAAa,IAAIC,eAAtC,EAAuDC,GAAvD,EAA4DC,4BAA5D,QAAgG,gBAAhG;AACA,SAASC,GAAT,QAAoB,eAApB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,MAAT,QAAuB,gBAAvB;;AAEA,IAAIC,UAAU,GAAG,SAASA,UAAT,GAAsB;AACrC,SAAON,GAAG,CAACK,MAAD,EAAS;AACjBE,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,YAAhB,EAA8B;AACpC,UAAIC,aAAJ;;AAEA,UAAIC,KAAK,GAAGF,YAAZ;;AAEA,UAAIG,IAAI,GAAGD,KAAK,CAACE,MAAN,IAAgBF,KAA3B;AAAA,UACIG,aAAa,GAAGF,IAAI,CAACE,aADzB;;AAGA,UAAIA,aAAa,KAAK,KAAlB,IAA2BH,KAAK,CAACH,MAAN,IAAgB,CAACG,KAAK,CAACH,MAAN,CAAaO,IAA7D,EAAmE;AACjE,eAAO,IAAP;AACD;;AAED,UAAIC,SAAS,GAAG,CAAC,CAACN,aAAa,GAAGC,KAAK,CAACE,MAAvB,KAAkC,IAAlC,GAAyC,KAAK,CAA9C,GAAkDH,aAAa,CAACO,YAAjE,MAAmF,KAAnF,GAA2FC,SAA3F,GAAuG,YAAvH;AACA,aAAOf,GAAG,CAAC;AACT,aAAK;AACHa,UAAAA,SAAS,EAAEA;AADR,SADI;AAITG,QAAAA,IAAI,EAAE;AACJC,UAAAA,OAAO,EAAE;AADL,SAJG;AAOTC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAE;AADJ;AAPG,OAAD,CAAH,CAUJX,KAVI,CAAP;AAWD;AAzBgB,GAAT,CAAV;AA2BD,CA5BD;;AA8BA,IAAIZ,aAAa,GAAG,SAASA,aAAT,CAAuBwB,KAAvB,EAA8B;AAChD,MAAIZ,KAAK,GAAGY,KAAK,CAACZ,KAAlB;AAAA,MACIa,UAAU,GAAGD,KAAK,CAACC,UADvB;AAAA,MAEIC,QAAQ,GAAGF,KAAK,CAACE,QAFrB;AAGA,MAAIC,KAAK,GAAG5B,UAAU,EAAtB;AACA,MAAI6B,UAAU,GAAGD,KAAK,KAAKxB,4BAA3B;AACA,SAAO,aAAaL,KAAK,CAAC+B,aAAN,CAAoB5B,eAApB,EAAqC;AACvDW,IAAAA,KAAK,EAAEA;AADgD,GAArC,EAEjB,aAAad,KAAK,CAAC+B,aAAN,CAAoBxB,iBAApB,EAAuC,IAAvC,EAA6CuB,UAAU,IAAI,aAAa9B,KAAK,CAAC+B,aAAN,CAAoBrB,UAApB,EAAgC,IAAhC,CAAxE,EAA+G,aAAaV,KAAK,CAAC+B,aAAN,CAAoBvB,WAApB,EAAiC;AAC3KmB,IAAAA,UAAU,EAAEA;AAD+J,GAAjC,EAEzIC,QAFyI,CAA5H,CAFI,CAApB;AAKD,CAXD;;AAaA,SAAS1B,aAAT","sourcesContent":["import React from 'react';\nimport { useThemeUI, ThemeProvider as ThemeProvider$1, jsx, __themeUiDefaultContextValue } from '@theme-ui/core';\nimport { css } from '@theme-ui/css';\nimport { ColorModeProvider } from '@theme-ui/color-modes';\nimport { MDXProvider } from '@theme-ui/mdx';\nimport { Global } from '@emotion/react';\n\nvar RootStyles = function RootStyles() {\n  return jsx(Global, {\n    styles: function styles(emotionTheme) {\n      var _theme$config;\n\n      var theme = emotionTheme;\n\n      var _ref = theme.config || theme,\n          useRootStyles = _ref.useRootStyles;\n\n      if (useRootStyles === false || theme.styles && !theme.styles.root) {\n        return null;\n      }\n\n      var boxSizing = ((_theme$config = theme.config) == null ? void 0 : _theme$config.useBorderBox) === false ? undefined : 'border-box';\n      return css({\n        '*': {\n          boxSizing: boxSizing\n        },\n        html: {\n          variant: 'styles.root'\n        },\n        body: {\n          margin: 0\n        }\n      })(theme);\n    }\n  });\n};\n\nvar ThemeProvider = function ThemeProvider(_ref2) {\n  var theme = _ref2.theme,\n      components = _ref2.components,\n      children = _ref2.children;\n  var outer = useThemeUI();\n  var isTopLevel = outer === __themeUiDefaultContextValue;\n  return /*#__PURE__*/React.createElement(ThemeProvider$1, {\n    theme: theme\n  }, /*#__PURE__*/React.createElement(ColorModeProvider, null, isTopLevel && /*#__PURE__*/React.createElement(RootStyles, null), /*#__PURE__*/React.createElement(MDXProvider, {\n    components: components\n  }, children)));\n};\n\nexport { ThemeProvider };\n"]},"metadata":{},"sourceType":"module"}